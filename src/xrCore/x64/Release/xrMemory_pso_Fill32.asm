; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?xrMemFill32_x86@@YAXPEAXII@Z			; xrMemFill32_x86
PUBLIC	?xrMemFill32_MMX@@YAXPEAXII@Z			; xrMemFill32_MMX
; Function compile flags: /Ogtpy
; File c:\x-ray\stcop\rgs\src\xrcore\xrmemory_pso_fill32.cpp
;	COMDAT ?xrMemFill32_MMX@@YAXPEAXII@Z
_TEXT	SEGMENT
dest$ = 8
value$ = 16
count$ = 24
?xrMemFill32_MMX@@YAXPEAXII@Z PROC			; xrMemFill32_MMX, COMDAT

; 14   :     u32* ptr = (u32*)dest;
; 15   :     u32* end = ptr + count;

	mov	eax, r8d
	lea	r8, QWORD PTR [rcx+rax*4]
	xor	eax, eax
	mov	r9, r8
	sub	r9, rcx
	add	r9, 3
	shr	r9, 2
	cmp	rcx, r8
	cmova	r9, rax

; 16   :     for (; ptr != end;) *ptr++ = value;

	test	r9, r9
	je	SHORT $LN1@xrMemFill3
	npad	13
$LL7@xrMemFill3:
	inc	rax
	mov	DWORD PTR [rcx], edx
	lea	rcx, QWORD PTR [rcx+4]
	cmp	rax, r9
	jne	SHORT $LL7@xrMemFill3
$LN1@xrMemFill3:

; 17   : }

	ret	0
?xrMemFill32_MMX@@YAXPEAXII@Z ENDP			; xrMemFill32_MMX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\x-ray\stcop\rgs\src\xrcore\xrmemory_pso_fill32.cpp
;	COMDAT ?xrMemFill32_x86@@YAXPEAXII@Z
_TEXT	SEGMENT
dest$ = 8
value$ = 16
count$ = 24
?xrMemFill32_x86@@YAXPEAXII@Z PROC			; xrMemFill32_x86, COMDAT

; 6    :     u32* ptr = (u32*)dest;
; 7    :     u32* end = ptr + count;

	mov	eax, r8d
	lea	r8, QWORD PTR [rcx+rax*4]
	xor	eax, eax
	mov	r9, r8
	sub	r9, rcx
	add	r9, 3
	shr	r9, 2
	cmp	rcx, r8
	cmova	r9, rax

; 8    :     for (; ptr != end;) *ptr++ = value;

	test	r9, r9
	je	SHORT $LN1@xrMemFill3
	npad	13
$LL7@xrMemFill3:
	inc	rax
	mov	DWORD PTR [rcx], edx
	lea	rcx, QWORD PTR [rcx+4]
	cmp	rax, r9
	jne	SHORT $LL7@xrMemFill3
$LN1@xrMemFill3:

; 9    : }

	ret	0
?xrMemFill32_x86@@YAXPEAXII@Z ENDP			; xrMemFill32_x86
_TEXT	ENDS
END
